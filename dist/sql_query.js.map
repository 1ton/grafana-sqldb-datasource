{"version":3,"sources":["../src/public/sql_query.js"],"names":[],"mappings":"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","file":"sql_query.js","sourcesContent":["///<reference path=\"app/headers/common.d.ts\" />\nSystem.register(['lodash', './query_part'], function(exports_1) {\n    var lodash_1, query_part_1;\n    var SqlQuery;\n    return {\n        setters:[\n            function (lodash_1_1) {\n                lodash_1 = lodash_1_1;\n            },\n            function (query_part_1_1) {\n                query_part_1 = query_part_1_1;\n            }],\n        execute: function() {\n            SqlQuery = (function () {\n                /** @ngInject */\n                function SqlQuery(target, templateSrv, scopedVars) {\n                    this.dbms = null;\n                    this.target = target;\n                    this.templateSrv = templateSrv;\n                    this.scopedVars = scopedVars;\n                    target.schema = target.schema || 'default';\n                    target.dsType = 'sqldb';\n                    target.timeColDataType = target.timeColDataType || 'time : type';\n                    target.resultFormat = target.resultFormat || 'time_series';\n                    target.tags = target.tags || [];\n                    target.groupBy = target.groupBy || [\n                        { type: 'time', params: ['$interval'] },\n                    ];\n                    target.targetLists = target.targetLists || [[\n                            { type: 'field', params: ['*'] },\n                            { type: 'count', params: [] },\n                        ]];\n                    target.alias = target.alias || '$t.$col';\n                    this.updateProjection();\n                }\n                SqlQuery.prototype.updateProjection = function () {\n                    this.selectModels = lodash_1.default.map(this.target.targetLists, function (parts) {\n                        return lodash_1.default.map(parts, query_part_1.default.create);\n                    });\n                    this.groupByParts = lodash_1.default.map(this.target.groupBy, query_part_1.default.create);\n                };\n                SqlQuery.prototype.updatePersistedParts = function () {\n                    this.target.targetLists = lodash_1.default.map(this.selectModels, function (selectParts) {\n                        return lodash_1.default.map(selectParts, function (part) {\n                            return { type: part.def.type, params: part.params };\n                        });\n                    });\n                };\n                SqlQuery.prototype.hasGroupByTime = function () {\n                    return lodash_1.default.find(this.target.groupBy, function (g) { return g.type === 'time'; });\n                };\n                SqlQuery.prototype.addGroupBy = function (value) {\n                    var stringParts = value.match(/^(\\w+)\\((.*)\\)$/);\n                    var typePart = stringParts[1];\n                    var arg = stringParts[2];\n                    var partModel = query_part_1.default.create({ type: typePart, params: [arg] });\n                    var partCount = this.target.groupBy.length;\n                    if (partCount === 0) {\n                        this.target.groupBy.push(partModel.part);\n                    }\n                    else if (typePart === 'time') {\n                        this.target.groupBy.splice(0, 0, partModel.part);\n                    }\n                    else {\n                        this.target.groupBy.push(partModel.part);\n                    }\n                    this.updateProjection();\n                };\n                SqlQuery.prototype.removeGroupByPart = function (part, index) {\n                    var categories = query_part_1.default.getCategories();\n                    if (part.def.type === 'time') {\n                        // remove aggregations\n                        this.target.targetLists = lodash_1.default.map(this.target.targetLists, function (s) {\n                            return lodash_1.default.filter(s, function (part) {\n                                var partModel = query_part_1.default.create(part);\n                                if (partModel.def.category === categories.Aggregations) {\n                                    return false;\n                                }\n                                if (partModel.def.category === categories.Selectors) {\n                                    return false;\n                                }\n                                return true;\n                            });\n                        });\n                    }\n                    this.target.groupBy.splice(index, 1);\n                    this.updateProjection();\n                };\n                SqlQuery.prototype.removeSelect = function (index) {\n                    this.target.targetLists.splice(index, 1);\n                    this.updateProjection();\n                };\n                SqlQuery.prototype.removeSelectPart = function (selectParts, part) {\n                    // if we remove the field remove the whole statement\n                    if (part.def.type === 'field') {\n                        if (this.selectModels.length > 1) {\n                            var modelsIndex = lodash_1.default.indexOf(this.selectModels, selectParts);\n                            this.selectModels.splice(modelsIndex, 1);\n                        }\n                    }\n                    else {\n                        var partIndex = lodash_1.default.indexOf(selectParts, part);\n                        selectParts.splice(partIndex, 1);\n                    }\n                    this.updatePersistedParts();\n                };\n                SqlQuery.prototype.addSelectPart = function (selectParts, type) {\n                    var partModel = query_part_1.default.create({ type: type });\n                    partModel.def.addStrategy(selectParts, partModel, this);\n                    this.updatePersistedParts();\n                };\n                SqlQuery.prototype.renderTagCondition = function (tag, index, interpolate) {\n                    var str = \"\";\n                    var operator = tag.operator;\n                    var value = tag.value;\n                    if (index > 0) {\n                        str = (tag.condition || 'AND') + ' ';\n                    }\n                    if (!operator) {\n                        if (/^\\/.*\\/$/.test(value)) {\n                            operator = '=~';\n                        }\n                        else {\n                            operator = '=';\n                        }\n                    }\n                    // quote value unless regex\n                    var matchOperators = query_part_1.default.getMatchOperators(this.dbms);\n                    if (!matchOperators || (operator !== matchOperators.match && operator !== matchOperators.not)) {\n                        if (interpolate) {\n                            value = this.templateSrv.replace(value, this.scopedVars);\n                        }\n                        if (operator !== '>' && operator !== '<') {\n                            value = \"'\" + value.replace('\\\\', '\\\\\\\\') + \"'\";\n                        }\n                    }\n                    else if (interpolate) {\n                        value = this.templateSrv.replace(value, this.scopedVars, 'regex');\n                        value = \"'\" + value.replace(/^\\//, '').replace(/\\/$/, '') + \"'\";\n                    }\n                    return str + tag.key + ' ' + operator + ' ' + value;\n                };\n                SqlQuery.prototype.gettableAndSchema = function (interpolate) {\n                    var schema = this.target.schema;\n                    var table = this.target.table || 'table';\n                    if (!table.match('^/.*/')) {\n                        table = table;\n                    }\n                    else if (interpolate) {\n                        table = this.templateSrv.replace(table, this.scopedVars, 'regex');\n                    }\n                    if (schema !== 'default') {\n                        schema = this.target.schema + '.';\n                    }\n                    else {\n                        schema = \"\";\n                    }\n                    var rtn = schema + table;\n                    return rtn;\n                };\n                SqlQuery.prototype.render = function (interpolate) {\n                    var _this = this;\n                    var target = this.target;\n                    if (target.rawQuery) {\n                        if (interpolate) {\n                            return this.templateSrv.replace(target.query, this.scopedVars, 'regex');\n                        }\n                        else {\n                            return target.query;\n                        }\n                    }\n                    var query = 'SELECT ';\n                    query += '$unixtimeColumn * 1000 AS time_msec, ';\n                    var i, y;\n                    for (i = 0; i < this.selectModels.length; i++) {\n                        var parts = this.selectModels[i];\n                        var selectText = \"\";\n                        for (y = 0; y < parts.length; y++) {\n                            var part = parts[y];\n                            selectText = part.render(selectText);\n                        }\n                        if (i > 0) {\n                            query += ', ';\n                        }\n                        query += selectText;\n                    }\n                    query += ' FROM ' + this.gettableAndSchema(interpolate) + ' WHERE ';\n                    var conditions = lodash_1.default.map(target.tags, function (tag, index) {\n                        return _this.renderTagCondition(tag, index, interpolate);\n                    });\n                    query += conditions.join(' ');\n                    query += (conditions.length > 0 ? ' AND ' : '') + '$timeFilter';\n                    if (target.groupBy.length !== 0) {\n                        query += ' GROUP BY $unixtimeColumn';\n                    }\n                    query += ' ORDER BY $unixtimeColumn';\n                    return query;\n                };\n                return SqlQuery;\n            })();\n            exports_1(\"default\", SqlQuery);\n        }\n    }\n});\n//# sourceMappingURL=sql_query.js.map"]}