{"version":3,"sources":["../src/public/query_part.js"],"names":[],"mappings":"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","file":"query_part.js","sourcesContent":["///<reference path=\"app/headers/common.d.ts\" />\nSystem.register(['lodash'], function(exports_1) {\n    var lodash_1;\n    var index, categories, groupByTimeFunctions, QueryPartDef, QueryPart;\n    function functionRenderer(part, innerExpr) {\n        var str = part.def.type + '(';\n        var parameters = lodash_1.default.map(part.params, function (value, index) {\n            var paramType = part.def.params[index];\n            if (paramType.type === 'time') {\n                if (value === 'auto') {\n                    value = '$interval';\n                }\n            }\n            if (paramType.quote === 'single') {\n                return \"'\" + value + \"'\";\n            }\n            else if (paramType.quote === 'double') {\n                return '\"' + value + '\"';\n            }\n            return value;\n        });\n        if (innerExpr) {\n            parameters.unshift(innerExpr);\n        }\n        return str + parameters.join(', ') + ')';\n    }\n    function aliasRenderer(part, innerExpr) {\n        return innerExpr + ' AS ' + '\"' + part.params[0] + '\"';\n    }\n    function suffixRenderer(part, innerExpr) {\n        return innerExpr + ' ' + part.params[0];\n    }\n    function identityRenderer(part, innerExpr) {\n        return part.params[0];\n    }\n    function quotedIdentityRenderer(part, innerExpr) {\n        return '\"' + part.params[0] + '\"';\n    }\n    function fieldRenderer(part, innerExpr) {\n        return part.params[0];\n    }\n    function replaceAggregationAddStrategy(selectParts, partModel) {\n        // look for existing aggregation\n        for (var i = 0; i < selectParts.length; i++) {\n            var part = selectParts[i];\n            if (part.def.category === categories.Aggregations) {\n                selectParts[i] = partModel;\n                return;\n            }\n            if (part.def.category === categories.Selectors) {\n                selectParts[i] = partModel;\n                return;\n            }\n        }\n        selectParts.splice(1, 0, partModel);\n    }\n    function addMathStrategy(selectParts, partModel) {\n        var partCount = selectParts.length;\n        if (partCount > 0) {\n            // if last is math, replace it\n            if (selectParts[partCount - 1].def.type === 'math') {\n                selectParts[partCount - 1] = partModel;\n                return;\n            }\n            // if next to last is math, replace it\n            if (selectParts[partCount - 2].def.type === 'math') {\n                selectParts[partCount - 2] = partModel;\n                return;\n            }\n            else if (selectParts[partCount - 1].def.type === 'alias') {\n                selectParts.splice(partCount - 1, 0, partModel);\n                return;\n            }\n        }\n        selectParts.push(partModel);\n    }\n    function addAliasStrategy(selectParts, partModel) {\n        var partCount = selectParts.length;\n        if (partCount > 0) {\n            // if last is alias, replace it\n            if (selectParts[partCount - 1].def.type === 'alias') {\n                selectParts[partCount - 1] = partModel;\n                return;\n            }\n        }\n        selectParts.push(partModel);\n    }\n    function addFieldStrategy(selectParts, partModel, query) {\n        // copy all parts\n        var parts = lodash_1.default.map(selectParts, function (part) {\n            return new QueryPart({ type: part.def.type, params: lodash_1.default.clone(part.params) });\n        });\n        query.selectModels.push(parts);\n    }\n    return {\n        setters:[\n            function (lodash_1_1) {\n                lodash_1 = lodash_1_1;\n            }],\n        execute: function() {\n            index = [];\n            categories = {\n                Aggregations: [],\n                Selectors: [],\n                Math: [],\n                Aliasing: [],\n                Fields: [],\n            };\n            groupByTimeFunctions = [];\n            QueryPartDef = (function () {\n                function QueryPartDef(options) {\n                    this.type = options.type;\n                    this.params = options.params;\n                    this.defaultParams = options.defaultParams;\n                    this.renderer = options.renderer;\n                    this.category = options.category;\n                    this.addStrategy = options.addStrategy;\n                }\n                QueryPartDef.register = function (options) {\n                    index[options.type] = new QueryPartDef(options);\n                    options.category.push(index[options.type]);\n                };\n                return QueryPartDef;\n            })();\n            QueryPartDef.register({\n                type: 'field',\n                addStrategy: addFieldStrategy,\n                category: categories.Fields,\n                params: [{ type: 'field', dynamicLookup: true }],\n                defaultParams: ['value'],\n                renderer: fieldRenderer,\n            });\n            // Aggregations\n            QueryPartDef.register({\n                type: 'count',\n                addStrategy: replaceAggregationAddStrategy,\n                category: categories.Aggregations,\n                params: [],\n                defaultParams: [],\n                renderer: functionRenderer,\n            });\n            QueryPartDef.register({\n                type: 'avg',\n                addStrategy: replaceAggregationAddStrategy,\n                category: categories.Aggregations,\n                params: [],\n                defaultParams: [],\n                renderer: functionRenderer,\n            });\n            QueryPartDef.register({\n                type: 'sum',\n                addStrategy: replaceAggregationAddStrategy,\n                category: categories.Aggregations,\n                params: [],\n                defaultParams: [],\n                renderer: functionRenderer,\n            });\n            // transformations\n            QueryPartDef.register({\n                type: 'time',\n                category: groupByTimeFunctions,\n                params: [{ name: \"interval\", type: \"time\", options: ['auto', '1s', '10s', '1m', '5m', '10m', '15m', '1h'] }],\n                defaultParams: ['auto'],\n                renderer: functionRenderer,\n            });\n            // Selectors\n            QueryPartDef.register({\n                type: 'max',\n                addStrategy: replaceAggregationAddStrategy,\n                category: categories.Selectors,\n                params: [],\n                defaultParams: [],\n                renderer: functionRenderer,\n            });\n            QueryPartDef.register({\n                type: 'min',\n                addStrategy: replaceAggregationAddStrategy,\n                category: categories.Selectors,\n                params: [],\n                defaultParams: [],\n                renderer: functionRenderer,\n            });\n            QueryPartDef.register({\n                type: 'tag',\n                category: groupByTimeFunctions,\n                params: [{ name: 'tag', type: 'string', dynamicLookup: true }],\n                defaultParams: ['tag'],\n                renderer: fieldRenderer,\n            });\n            QueryPartDef.register({\n                type: 'math',\n                addStrategy: addMathStrategy,\n                category: categories.Math,\n                params: [{ name: \"expr\", type: \"string\" }],\n                defaultParams: [' / 100'],\n                renderer: suffixRenderer,\n            });\n            QueryPartDef.register({\n                type: 'alias',\n                addStrategy: addAliasStrategy,\n                category: categories.Aliasing,\n                params: [{ name: \"name\", type: \"string\", quote: 'double' }],\n                defaultParams: ['alias'],\n                renderMode: 'suffix',\n                renderer: aliasRenderer,\n            });\n            QueryPart = (function () {\n                function QueryPart(part) {\n                    this.part = part;\n                    this.def = index[part.type];\n                    if (!this.def) {\n                        throw { message: 'Could not find query part ' + part.type };\n                    }\n                    part.params = part.params || lodash_1.default.clone(this.def.defaultParams);\n                    this.params = part.params;\n                    this.updateText();\n                }\n                QueryPart.prototype.render = function (innerExpr) {\n                    return this.def.renderer(this, innerExpr);\n                };\n                QueryPart.prototype.hasMultipleParamsInString = function (strValue, index) {\n                    if (strValue.indexOf(',') === -1) {\n                        return false;\n                    }\n                    return this.def.params[index + 1] && this.def.params[index + 1].optional;\n                };\n                QueryPart.prototype.updateParam = function (strValue, index) {\n                    // handle optional parameters\n                    // if string contains ',' and next param is optional, split and update both\n                    if (this.hasMultipleParamsInString(strValue, index)) {\n                        lodash_1.default.each(strValue.split(','), function (partVal, idx) {\n                            this.updateParam(partVal.trim(), idx);\n                        }, this);\n                        return;\n                    }\n                    if (strValue === '' && this.def.params[index].optional) {\n                        this.params.splice(index, 1);\n                    }\n                    else {\n                        this.params[index] = strValue;\n                    }\n                    this.part.params = this.params;\n                    this.updateText();\n                };\n                QueryPart.prototype.updateText = function () {\n                    if (this.params.length === 0) {\n                        this.text = this.def.type + '()';\n                        return;\n                    }\n                    var text = this.def.type + '(';\n                    text += this.params.join(', ');\n                    text += ')';\n                    this.text = text;\n                };\n                return QueryPart;\n            })();\n            exports_1(\"default\",{\n                create: function (part) {\n                    return new QueryPart(part);\n                },\n                getCategories: function () {\n                    return categories;\n                },\n                getMatchOperators: function (dbms) {\n                    var rtn = null;\n                    switch (dbms) {\n                        case 'postgres':\n                            rtn = { 'match': '~*', 'not': '!~*' };\n                            break;\n                        case 'mysql':\n                            rtn = { 'match': 'REGEXP', 'not': 'NOT REGEXP' };\n                            break;\n                        default:\n                            break;\n                    }\n                    ;\n                    return rtn;\n                },\n            });\n        }\n    }\n});\n//# sourceMappingURL=query_part.js.map"]}